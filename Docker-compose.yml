version: '3.8'

services:
  # frontend:
  #   build: ./frontend
  #   ports:
  #     - "3000:3000"

  # backend
  app-gateway:
    container_name: app-gateway
    build:
      context: ./backend/app-gateway
    ports:
      - 4000:4000
    volumes:
      - ./backend/files-sistem/image:/app/files-sistem/image
    command: npm run start:dev
    depends_on:
      - rabbitmq
    restart: always

  auth:
    container_name: auth
    build:
      context: ./backend/auth
    command: npm run start:dev
    depends_on:
      - postgreauth
      - rabbitmq
    restart: always

  actor:
    container_name: actor-sistem
    build:
      context: ./backend/actor-sistem
    command: npm run start:dev
    depends_on:
      - postgresactor
      - rabbitmq
    restart: always

  files:
    container_name: files-sistem
    build:
      context: ./backend/files-sistem
    volumes:
      - ./backend/files-sistem/image:/app/file-sistem/image
    command: npm run start:dev
    depends_on:
      - postgresfiles
      - rabbitmq
    restart: always

  movie:
    container_name: movie
    build:
      context: ./backend/movie
    command: npm run listen
    depends_on:
      - postgresmovie
      - rabbitmq
    restart: always

  postgreauth:
    container_name: postgreAuth
    build:
      context: ./initAuth
      dockerfile: auth.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - dataAuth:/var/lib/postgresql/data
    restart: always

  postgresactor:
    container_name: postgresActor
    build:
      context: ./initActor
      dockerfile: actor.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - dataActor:/var/lib/postgresql/data
    restart: always
  
  postgresfiles:
    container_name: postgresFiles
    build:
      context: ./initFiles
      dockerfile: file.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - dataFiles:/var/lib/postgresql/data
    restart: always
  
  postgresmovie:
    container_name: postgresMovie
    build:
      context: ./initMovie
      dockerfile: movie.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - dataMovie:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672
      - 15672:15672
    restart: always

volumes:
  dataActor:
  dataAuth:
  dataFiles:
  dataMovie: